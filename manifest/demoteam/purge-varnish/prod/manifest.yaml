apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: purge-varnish
    env: prod
    team: demoteam
  name: purge-varnish-ecf5ab9a
data:
  DD_ENV: prod
  DD_LOGS: '[{"source":"k8s", "service":"purge-varnish", "version":"alpine3.22-perl"}]'
  DD_SERVICE: purge-varnish
  DD_VERSION: alpine3.22-perl
  LOG_LEVEL: info
  PORT: '8080'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: purge-varnish
    env: prod
    team: demoteam
  name: purge-varnish
spec:
  template:
    metadata:
      annotations:
        fnatt.io/inject-ca-bundle: enabled
        fnatt.io/inject-ca-env: enabled
      labels:
        team: demoteam
        app: purge-varnish
        env: prod
    spec:
      securityContext: {}
      containers:
      - image: nginxinc/nginx-unprivileged:alpine3.22-perl
        resources:
          requests:
            cpu: '0.5'
            memory: 512Mi
          limits:
            cpu: '2'
            memory: 2Gi
        securityContext: {}
        ports:
        - containerPort: 8080
        name: main
        envFrom:
        - configMapRef:
            name: purge-varnish-ecf5ab9a
  selector:
    matchLabels:
      team: demoteam
      app: purge-varnish
      env: prod
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: purge-varnish
    env: prod
    team: demoteam
  name: purge-varnish
spec:
  ingressClassName: ingress-nginx-pm
  rules:
  - host: purge-varnish.prod.fnatt.no
    http:
      paths:
      - path: /
        backend:
          service:
            port:
              number: 80
            name: purge-varnish
        pathType: Prefix
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: purge-varnish
    env: prod
    team: demoteam
  name: purge-varnish
spec:
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP
  selector:
    app: purge-varnish
    env: prod
    team: demoteam
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app: purge-varnish
    env: prod
    team: demoteam
  name: purge-varnish
spec:
  minAvailable: 50%
  selector:
    matchLabels:
      app: purge-varnish
      env: prod
      team: demoteam
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: purge-varnish
    env: prod
    team: demoteam
  name: purge-varnish
spec:
  maxReplicas: 8
  minReplicas: 2
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: purge-varnish
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded, BeforeHookCreation
  labels:
    app: purge-varnish
    env: prod
    team: demoteam
  name: purge-varnish-job-purge-edge-varnish
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - image: curlimages/curl:latest
        resources:
          limits:
            cpu: 0.5
            memory: 512Mi
        command:
        - curl
        args:
        - --fail
        - --max-time
        - '30'
        - -X
        - PURGE
        - http://broadcaster.adresseavisen.no
        - -H
        - 'xkey: CORE-PAGES FRONT-STUFF polarbear other xkey'
        - -H
        - 'X-Broadcast-Group: edge-prod-ubu22'
        name: purge-varnish-purge-edge-varnish
  backoffLimit: 3
