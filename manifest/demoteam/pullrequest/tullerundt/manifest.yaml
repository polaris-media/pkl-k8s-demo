apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: pullrequest
    env: tullerundt
    team: demoteam
  name: pullrequest-20c0fa2f
data:
  DD_ENV: tullerundt
  DD_LOGS: '[{"source":"k8s", "service":"pullrequest", "version":"v1.0.648"}]'
  DD_SERVICE: pullrequest
  DD_VERSION: v1.0.648
  LOG_LEVEL: info
  PORT: '8080'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pullrequest
    env: tullerundt
    team: demoteam
  name: pullrequest
spec:
  template:
    metadata:
      annotations:
        fnatt.io/inject-ca-bundle: enabled
        fnatt.io/inject-ca-env: enabled
      labels:
        team: demoteam
        app: pullrequest
        env: tullerundt
    spec:
      securityContext: {}
      topologySpreadConstraints:
      - whenUnsatisfiable: ScheduleAnyway
        maxSkew: 1
        labelSelector:
          matchLabels:
            app: pullrequest
            env: tullerundt
            team: demoteam
        topologyKey: kubernetes.io/hostname
      containers:
      - image: polarisit/ohj-test-project:v1.0.648
        resources:
          requests:
            cpu: '0.5'
            memory: 512Mi
          limits:
            cpu: '1'
            memory: 1Gi
        securityContext: {}
        ports:
        - containerPort: 8080
        command:
        - node
        args:
        - ./src/index.js
        name: main
        envFrom:
        - configMapRef:
            name: pullrequest-20c0fa2f
  selector:
    matchLabels:
      team: demoteam
      app: pullrequest
      env: tullerundt
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0%
  progressDeadlineSeconds: 300
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: pullrequest
    env: tullerundt
    team: demoteam
  name: pullrequest
spec:
  ingressClassName: ingress-nginx-pm
  rules:
  - host: pullrequest.tullerundt.fnatt.no
    http:
      paths:
      - path: /
        backend:
          service:
            port:
              number: 80
            name: pullrequest
        pathType: Prefix
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pullrequest
    env: tullerundt
    team: demoteam
  name: pullrequest
spec:
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP
  selector:
    app: pullrequest
    env: tullerundt
    team: demoteam
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app: pullrequest
    env: tullerundt
    team: demoteam
  name: pullrequest
spec:
  minAvailable: 50%
  selector:
    matchLabels:
      app: pullrequest
      env: tullerundt
      team: demoteam
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: pullrequest
    env: tullerundt
    team: demoteam
  name: pullrequest
spec:
  maxReplicas: 4
  minReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pullrequest
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  annotations:
    operator.1password.io/auto-restart: 'true'
    argocd.argoproj.io/hook: PreSync
  labels:
    app: pullrequest
    env: tullerundt
    team: demoteam
  name: pullrequest-slack-notify
spec:
  itemPath: vaults/dev/items/Argocd-slackbot-oauth
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded, BeforeHookCreation
  labels:
    app: pullrequest
    env: tullerundt
    team: demoteam
  name: pullrequest-job-message-slack-on-success
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - image: polarisit/slack-notify:latest
        resources:
          limits:
            cpu: 0.5
            memory: 512Mi
        env:
        - name: SLACK_CHANNEL
          value: tek-notifications-argocd
        - name: SLACK_APP_VERSION
          value: v1.0.648
        - name: SLACK_APP_NAME
          value: pullrequest
        - name: SLACK_APP_ENVIRONMENT
          value: tullerundt
        - name: SLACK_MESSAGE_TYPE
          value: success
        name: pullrequest-message-slack-on-success
        envFrom:
        - secretRef:
            name: pullrequest-slack-notify
  backoffLimit: 3
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: SyncFail
    argocd.argoproj.io/hook-delete-policy: HookSucceeded, BeforeHookCreation
  labels:
    app: pullrequest
    env: tullerundt
    team: demoteam
  name: pullrequest-job-message-slack-on-failure
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - image: polarisit/slack-notify:latest
        resources:
          limits:
            cpu: 0.5
            memory: 512Mi
        env:
        - name: SLACK_CHANNEL
          value: tek-notifications-argocd
        - name: SLACK_APP_VERSION
          value: v1.0.648
        - name: SLACK_APP_NAME
          value: pullrequest
        - name: SLACK_APP_ENVIRONMENT
          value: tullerundt
        - name: SLACK_MESSAGE_TYPE
          value: error
        name: pullrequest-message-slack-on-failure
        envFrom:
        - secretRef:
            name: pullrequest-slack-notify
  backoffLimit: 3
